//DEBUG------------

debug = 1;

//-----------------


scr = Sibelius.ActiveScore;


//First, start with the xml header
xmldata = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n";

//Now, the DOCTYPE
xmldata = xmldata & "<!DOCTYPE score-partwise PUBLIC\n";
xmldata = xmldata & "    \"-//Recordare\/\/DTD MusicXML 2.0 Partwise\/\/EN\"\n";
xmldata = xmldata & "    \"http:\/\/www.musicxml.org/dtds/partwise.dtd\">\n";
//Let"s open the root tag
xmldata = xmldata & "<score-partwise version=\"2.0\">\n";


//Now let"s add the part list

xmldata = xmldata & "  <part-list>\n";
partlist = scr.DynamicParts;
numparts = scr.StaffCount;
partperc = 0;
totalperc = 0;

//0 is the full score

for i = 0 to numparts{
	xmldata = xmldata & "    <score-part id=\"P";
	xmldata = xmldata & i;
	xmldata = xmldata & "\">\n";

	xmldata = xmldata & "      <part-name>";
	xmldata = xmldata & scr[i].FullInstrumentName;
	xmldata = xmldata & "</part-name>\n";
	xmldata = xmldata & "    </score-part>\n";
	i = i+1;
}

xmldata = xmldata & "  </part-list>\n";


bar = 0;
obj = 0;
oct = 0;
tims = 0;
pit = 0;
alt = 0;
attri = 0;
ndiv = 0;
sbar = 0;
dotted = 0;

tsnum = 0;
tsden = 0;
//Do this for each part
for i = 0 to numparts{
	xmldata = xmldata & "  <part id=\"P";
	xmldata = xmldata & i;
	xmldata = xmldata & "\">\n";

//Do this for every bar in each part (This is the bulk of the program)

	for bar = 1 to scr[i].BarCount{
		xmldata = xmldata & "    <measure number=\"";
		xmldata = xmldata & bar;
		xmldata = xmldata & "\">\n";



//Stores wether the attribute tag is open
		attri = 0;

//TOFIX: division shows up multiple times. why?
		for sbar = 0 to scr.SystemStaff[bar].BarObjectCount{
			if(scr.SystemStaff[bar].NthBarObject(sbar).Type = "TimeSignature"){
				if(attri = 0){
					xmldata = xmldata & "      <attributes>\n";
				}
				attri = 1;
				xmldata = xmldata & "        <divisions>";
				xmldata = xmldata & scr[i].NthBar(bar).Length;
				xmldata = xmldata & "</divisions>\n";
			}
       }


		if(attri){
			xmldata = xmldata & "      </attributes>\n";
          attri = 0;
		}

		//Do something for every object in the bar
		for obj = 0 to scr[i].NthBar(bar).BarObjectCount{

          tims = 0;
          

//Parse a note (or rest - TODO)
			if(scr[i].NthBar(bar).NthBarObject(obj).Type = "NoteRest"){
				xmldata = xmldata & "      <note>\n";
				xmldata = xmldata & "        <pitch>\n";
				for n = 0 to scr[i].NthBar(bar).NthBarObject(obj).NoteCount{
					oct = RoundUp(((scr[i].NthBar(bar).NthBarObject(obj)[n].Pitch)/12)) - 1;
					pit = scr[i].NthBar(bar).NthBarObject(obj)[n].Name;
					pit = Substring(pit,0,1);
					
					xmldata = xmldata & "          <step>";
					xmldata = xmldata & pit;
					xmldata = xmldata & "</step>\n";
					
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Accidental = Sharp){
						xmldata = xmldata & "          <alter>1</alter>\n";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Accidental = Flat){
						xmldata = xmldata & "          <alter>-1</alter>\n";
					}
					
					xmldata = xmldata & "          <octave>";
					xmldata = xmldata & oct;
					xmldata = xmldata & "</octave>\n";
					xmldata = xmldata & "        </pitch>\n";
					xmldata = xmldata & "        <type>";

//					ndiv = scr[i].NthBar(bar).Length/scr[i].NthBar(bar).NthBarObject(obj)[n].Duration;
//Not sure if this is reliable, but I"ll try it for now
					dotted = 0;
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 1024){
						xmldata = xmldata & "whole";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 512){
						xmldata = xmldata & "half";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 256){
						xmldata = xmldata & "quarter";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 128){
						xmldata = xmldata & "eighth";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 64){
						xmldata = xmldata & "16th";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 32){
						xmldata = xmldata & "32nd";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 16){
						xmldata = xmldata & "64th";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 8){
						xmldata = xmldata & "128th";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 4){
						xmldata = xmldata & "256th";
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 1536){
						xmldata = xmldata & "whole";
						dotted = 1;
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 768){
						xmldata = xmldata & "half";
						dotted = 1;
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 384){
						xmldata = xmldata & "quarter";
						dotted = 1;
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 192){
						xmldata = xmldata & "eighth";
						dotted = 1;
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 96){
						xmldata = xmldata & "16th";
						dotted = 1;
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 48){
						xmldata = xmldata & "32nd";
						dotted = 1;
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 24){
						xmldata = xmldata & "64th";
						dotted = 1;
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 12){
						xmldata = xmldata & "128th";
						dotted = 1;
					}
					if(scr[i].NthBar(bar).NthBarObject(obj)[n].Duration = 6){
						xmldata = xmldata & "256th";
						dotted = 1;
					}
					xmldata = xmldata & "</type>\n";

					if(dotted = 1){
						xmldata = xmldata & "        <dot></dot>\n";
					}

					xmldata = xmldata & "        <duration>";
					xmldata = xmldata & scr[i].NthBar(bar).NthBarObject(obj)[n].Duration;
					xmldata = xmldata & "</duration>\n";
					xmldata = xmldata & "      </note>\n";
				}
			}
		}
/* NOT CORRECT
		if(bar = 1){
			xmldata = xmldata & "      <attributes>\n";
			xmldata = xmldata & "        <divisions>";
			xmldata = xmldata & scr[i].NthBar(bar).Length;
			xmldata = xmldata & "</divisions>\n";
			xmldata = xmldata & "      </attributes>\n";
		}*/

		xmldata = xmldata & "    </measure>\n";
	}
	xmldata = xmldata & "  </part>\n";
	
}
xmldata = xmldata & "</score-partwise><!--THE END-->";

if(debug){
	fname = Sibelius.GetDocumentsFolder();
	fname = fname & "foo.xml";
}
//else{
//Add dialog to specify filename
//}


Sibelius.CreateTextFile(fname);
Sibelius.AppendTextFile(fname,xmldata,0);